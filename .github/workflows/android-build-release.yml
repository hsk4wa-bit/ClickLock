name: Build Android and Create Release

on:
  push:
    tags:
      - 'v*'      # run when you push a tag like v1.0.0
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Android SDK command-line tools
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline.zip
          unzip -q cmdline.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/latest
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools/* $ANDROID_SDK_ROOT/cmdline-tools/latest/
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build Release APK
        run: ./gradlew clean assembleRelease -Porg.gradle.daemon=false
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}

      - name: Upload artifact (workflow)
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: app/build/outputs/**/*.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: ./artifact

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: Release from CI

      - name: Upload APK to release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifact/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
